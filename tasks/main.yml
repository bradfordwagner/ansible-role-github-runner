---
- set_fact:
    runners_install_cache_dir: '{{ runners_install_dir }}/versions/{{ runners_version }}'
    download_url: '{{ runners_mirror }}/v{{ runners_version }}/actions-runner-linux-{{ arch }}-{{ runners_version }}.tar.gz'
    download_location: '/tmp/actions-runner-linux-{{ arch }}-{{ runners_version }}.tar.gz'
    instances_cast: '{{ runners_instances | int }}'
- debug:
    msg:
      - arch={{ arch }}
      - download_location={{ download_location }}
      - download_url={{ download_url }}
      - runners_install_cache_dir={{ runners_install_cache_dir }}

# check for existing runner version cache dir
- name: check={{ runners_install_cache_dir }}
  stat:
    path: '{{ runners_install_cache_dir }}'
  changed_when: False
  register: cache_dir
- when: not cache_dir.stat.exists
  block:
    - name: download={{ download_url }}, dest={{ download_location }}
      get_url:
        url: '{{ download_url }}'
        dest: '{{ download_location }}'
        mode: 0644
    - name: mkdir={{ runners_install_cache_dir }}
      file:
        path: '{{ runners_install_cache_dir }}'
        state: directory
        mode: 0755
    - name: unarchive from={{ download_location }},dest={{ runners_install_cache_dir }}
      unarchive:
          src: '{{ download_location }}'
          dest: '{{ runners_install_cache_dir }}'
  always:
    - name: clean={{ download_location }}
      file:
        path: '{{ download_location }}'
        state: absent

- name: clean={{ runners_install_dir }}/repos/{{ runners_owner }}
  file:
    path: '{{ runners_install_dir }}/repos/{{ runners_owner }}/{{ repo_prod.0.name }}-{{ repo_prod.1 }}'
    state: absent
  loop: '{{ runners_repos | product(range(instances_cast)) | list }}'
  loop_control:
    loop_var: repo_prod

- include_tasks: install_repo.yml
  loop: '{{ runners_repos | product(range(instances_cast)) | list }}'
  loop_control:
    loop_var: repo_prod
  when: not runners_download_bin_only
